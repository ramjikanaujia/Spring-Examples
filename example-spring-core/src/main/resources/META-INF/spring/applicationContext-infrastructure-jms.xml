<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:amq="http://activemq.apache.org/schema/core" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="example.infrastructure.jms" />

	<amq:broker id="amqBroker" useJmx="true" useShutdownHook="false" persistent="false">
		<amq:transportConnectors>
			<amq:transportConnector uri="vm://localhost" />
		</amq:transportConnectors>
		<amq:destinationPolicy>
			<amq:policyMap>
				<amq:policyEntries>
					<amq:policyEntry queue=">">
						<amq:deadLetterStrategy>
							<amq:individualDeadLetterStrategy queuePrefix="DLQ." useQueueForQueueMessages="true"
								processNonPersistent="true" />
						</amq:deadLetterStrategy>
					</amq:policyEntry>
					<amq:policyEntry topic=">">
						<amq:deadLetterStrategy>
							<amq:individualDeadLetterStrategy topicPrefix="DLQ." useQueueForTopicMessages="true"
								processNonPersistent="true" />
						</amq:deadLetterStrategy>
					</amq:policyEntry>
				</amq:policyEntries>
			</amq:policyMap>
		</amq:destinationPolicy>
	</amq:broker>

	<bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory" depends-on="amqBroker">
		<property name="brokerURL" value="vm://localhost" />
		<property name="alwaysSyncSend" value="false" />
		<property name="prefetchPolicy">
			<bean class="org.apache.activemq.ActiveMQPrefetchPolicy">
				<property name="queuePrefetch" value="1" />
			</bean>
		</property>
		<property name="redeliveryPolicy">
			<bean class="org.apache.activemq.RedeliveryPolicy">
				<property name="initialRedeliveryDelay" value="${jms.initialRedeliveryDelay}" />
				<property name="backOffMultiplier" value="${jms.backOffMultiplier}" />
				<property name="maximumRedeliveries" value="${jms.maximumRedeliveries}" />
				<property name="useExponentialBackOff" value="true" />
				<property name="tempQueue" value="true" />
			</bean>
		</property>
	</bean>

	<bean id="jmsConnectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
		<constructor-arg ref="amqConnectionFactory" />
		<property name="reconnectOnException" value="true" />
	</bean>

	<!-- <bean id="jmsConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory"> -->
	<!-- <constructor-arg ref="amqConnectionFactory" /> -->
	<!-- <property name="reconnectOnException" value="true" /> -->
	<!-- <property name="sessionCacheSize" value="10" /> -->
	<!-- </bean> -->

	<bean id="messageConverter" class="org.springframework.jms.support.converter.MappingJackson2MessageConverter">
		<property name="objectMapper" ref="jackson2ObjectMapperFactoryBean" />
		<property name="targetType" value="TEXT" />
		<property name="typeIdPropertyName" value="type" />
	</bean>

	<bean id="abstractJmsTemplate" class="org.springframework.jms.core.JmsTemplate" abstract="true">
		<constructor-arg ref="jmsConnectionFactory" />
		<property name="sessionTransacted" value="true" />
		<property name="messageConverter" ref="messageConverter" />
	</bean>

	<bean id="abstractJmsListenerContainer" class="org.springframework.jms.listener.SimpleMessageListenerContainer"
		abstract="true">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="sessionTransacted" value="true" />
	</bean>

	<bean id="abstractMessageListenerAdapter" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<property name="messageConverter" ref="messageConverter" />
	</bean>

</beans>
